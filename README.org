* Po potoce

Indirect tactics, efficiently applied, are inexhaustible as Heaven and Earth,
unending as the flow of rivers and streams

My talk about how I got to understand reactive streams through C# and moved that
knowledge to ClojureScript.

** Story
*** C#
**** Long running problem with deployment/watchdog/heartbeat SW
***** Interprocess communication
***** Helper processes
***** Several KLs of code
***** Creator is on parental leave
**** Rewrite in same spirit, just leave out what is not needed anymore
***** Big chunks of code just copied
***** Same architectur
***** Programmer got ill
***** I took over and wanted to test it
**** New start with ReactiveX
***** Timer loop based checks
***** Subscribing to only right info through LINQ
***** Library with fully tested code
***** Final aplications is only couple of lines, mostly config and orchestration
*** ClojureScript
**** Showrum
***** Simple markdown presentations
***** More decks
**** Maps&functions
***** Unbeareable after while
***** Too much checks and conditions
**** Potok
***** Reactive streams
***** Sister lib beicon - wraper of RX.js
***** Czech word means stream of water
